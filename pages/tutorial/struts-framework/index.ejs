<%- include("../../includes/page-start.ejs", {pathToRootFolder: "../../", title: "Struts framework", metaDescription: "V této části si představíme framework jménem Struts (přesněji Struts 2).", useHighlightJS: true}) %>
    <%- include("../../includes/header.ejs", {pathToRootFolder: "../../", activeLink: "tutorial"}) %>
    <%- include("../../includes/tutorial-page-layout-start.ejs", {pathToTutorialFolder: "../", activeLink: "struts-framework"}) %>
        <h1 class="heading-primary u-mb-4">Struts framework</h1>
        <p class="paragraph u-mb-4">V této části si představíme framework jménem <a href="https://struts.apache.org/index.html" target="_blank" class="link">Struts</a> (přesněji Struts 2). Jedná se o framework, který je postavený na MVC vzoru a vývoj webových aplikací je pro nás díky němu jednodušší. Nebudeme jej rozebírat příliš do hloubky. Akorát si ukážeme, jakým způsobem se s ním pracuje. Pokud by vás zaujal a rozhodli se o něm dozvědět více, tak můžete navštívít třeba <a href="https://struts.apache.org/getting-started/" target="_blank" class="link">dokumentaci</a>.</p>
        <h2 id="komponenty-struts-2-frameworku" class="heading-secondary u-mb-2">Komponenty Struts 2 frameworku</h2>
        <p class="paragraph u-mb-2">Struts 2 se trochu liší od tradičního MVC frameworku. Controller v tomto případě mapuje příchozí requesty na action třídy. Představuje jej dispatcher, což je servlet filter, který je namapován na všechny URL. Action třídy jsou zodpovědné za zpracování requestů. Action třída ve Struts 2 představuje v podstatě model, ale kromě toho že zpracovává requesty a může pracovat s databází, tak je také zodpovědná za výběr JSP stránky (view) k vyrenderování. Kromě JSP stránek Struts podporuje také třeba šablonovací systémy jako je FreeMarker nebo Velocity. Navíc můžeme namísto stránky vytvářet i JSON nebo XML.</p>
        <p class="paragraph u-mb-4">Struts 2 framework obsahuje ještě další komponenty, ale tím už se zabývat nebudeme. Jak jsem psal, Struts framework si tu jen představíme a vyzkoušíme použít.</p>
        <h2 id="ukazka-tvorby-projektu" class="heading-secondary u-mb-2">Ukázka tvorby projektu</h2>
        <p class="paragraph u-mb-2">Pro ukázku práce se Struts frameworkem si vytvoříme úplně jednoduchou aplikaci. Uživateli se zobrazí stránka s formulářem, na které zadá jméno a příjmení. Po odeslání tohoto formuláře se mu vrátí stránka, která jej pozdraví.</p>
        <p class="paragraph u-mb-2">Založíme si nový Maven projekt, a začneme tím, že si do souboru pom.xml kromě závislosti pro servlety přidáme také <a href="https://mvnrepository.com/artifact/org.apache.struts/struts2-core" target="_blank" class="link">závislost pro Struts 2 framework</a>.</p>
        <%- include("./includes/struts-example-code-box-1.ejs") %>
        <p class="paragraph u-mb-2">První věc, kterou uděláme, je vytvoření web.xml souboru a nastavení filtru StrutsPrepareAndExecuteFilter ze Struts knihovny pro všechny příchozí requesty. Tento filtr vlastně představuje controller, který podle URL volá odpovídající action třídy. Následující ukázka ukazuje, jak jej v souboru web.xml můžeme nastavit.</p>
        <%- include("./includes/struts-example-code-box-2.ejs") %>
        <p class="paragraph u-mb-2">Nyní se o mapování requestů bude starat Struts framework. Můžeme vytvořit action pro hlavní stránku, na které uživatel bude moci zadat své jméno a příjmení. Jelikož se jedná jen o vyrenderování stránky, tak ani nebudeme vytvářet žádnou action třídu, protože můžeme pro action (URL) nastavit přímo JSP stránku. JSP stránku vytvoříme ve složce WEB-INF/jsp, aby k ní uživatelé neměli přímý přístup a můžeme ji nazvat třeba jako "Home.jsp". Následující ukázka ukazuje její kód. Formulář směřuje na action vysledek, kterou později vytvoříme.</p>
        <%- include("./includes/struts-example-code-box-3.ejs") %>
        <p class="paragraph u-mb-2">Struts se konfiguruje v souboru struts.xml, který se vytváří v src/main/resources složce. Tato složka slouží k ukládání věcí, které nejsou Java třídy. Následující ukázka ukazuje základní kód souboru. Kořenovým elementem je element struts.</p>
        <%- include("./includes/struts-example-code-box-4.ejs") %>
        <p class="paragraph u-mb-2">Pomocí elementu constant a nastavením jeho atributu name na "struts.devMode" můžeme atributem value nastavit, zda se má aplikace spustit v módu pro vývoj. To nyní chceme, takže nastavíme atribut value na hodnotu true.</p>
        <%- include("./includes/struts-example-code-box-5.ejs") %>
        <p class="paragraph u-mb-2">Teď v souboru struts.xml nadefinujeme action pro naši vytvořenou JSP stránku. To se dělá uvnitř elementu package (nebudu zabýhat do detailů) elementem action, kde atributem name nastavíme název action a pomocí podelementu result JSP stránku, která se má použít. Následující ukázka ukazuje upravený soubor. Jako název action nastavujeme prázdný řetězec, aby se použila pro domovskou stránku. Nevím jestli je to úplně správné řešení, ale funguje to.</p>
        <%- include("./includes/struts-example-code-box-6.ejs") %>
        <p class="paragraph u-mb-2">Po spuštění aplikace a navštívení <a href="http://localhost:8080/struts-projekt/" target="_blank" class="link">http://localhost:8080/struts-projekt/</a> by jste měli vidět stránku, kterou ukazuje následující obrázek.</p>
        <img src="../../static/img/screenshots/StrutsFrameworkPrikladUvodniStranka.png" alt="vygenerovaná stránka" class="image image--full-width image--with-border u-mb-2">
        <p class="paragraph u-mb-2">Teď si založíme action pro zpracování formuláře a zobrazení stránky s pozdravem. Tentokrát již budeme potřebovat i action třídu, jelikož budeme zpracovávat formulář. Action třídy jsou ve Struts 2 jednoduše POJO (Plain Old Java Object), takže nemusí dědit od žádné třídy. Akorát mohou obsahovat execute metodu, která se volá pro zpracování requestu. Založíme si tedy třídu (v nějakém Java balíčku), kterou můžeme pojmenovat jako Vysledek. Jako vlastnosti jí nastavíme položky, které se posílají ve formuláři. Vytvoříme pro ně také gettery a settery a automaticky se jim z odeslaného formuláře nastaví hodnoty. Následující ukázka ukazuje kód třídy.</p>
        <%- include("./includes/struts-example-code-box-7.ejs") %>
        <p class="paragraph u-mb-2">Pro action vytvoříme JSP stránku jménem "Vysledek.jsp", ve které hodnoty formuláře použijeme při tvorbě pozdravu. Ukazuje ji následující ukázka. Pro výpis hodnot se používá tag jménem property z knihovny tagů, které nám Struts framework poskytuje pod uri "/struts-tags".</p>
        <%- include("./includes/struts-example-code-box-8.ejs") %>
        <p class="paragraph u-mb-2">Teď si action nadefinujeme v souboru struts.xml, jak ukazuje následující ukázka. Jméno action jsme nastavili na "vysledek", jelikož na tuto action odkazuje formulář na úvodní stránce a atributem class jsme nastavili action třídu. Elementu result jsme také nastavili název pomocí atributu name. To bychom dělat nemuseli, ale chtěl bych vám u action třídy ukázat metodu execute.</p>
        <%- include("./includes/struts-example-code-box-9.ejs") %>
        <p class="paragraph u-mb-2">Metoda execute v action třídě určuje, jaká stránka se má vyrenderovat. Action totiž může mít nastavených více result elementů. V naší třídě tedy metodu execute implementujeme a vrátíme v ní název, který jsme nastavili result elementu.</p>
        <%- include("./includes/struts-example-code-box-10.ejs") %>
        <p class="paragraph u-mb-2">Naše aplikace je hotová. Pokud si na úvodní stránce zkusíte vyplnit jméno a příjmení, tak se vám zobrazí stránka s pozdravem.</p>
        <img src="../../static/img/screenshots/StrutsFrameworkPrikladStrankaSPozdravem.png" alt="stránka s pozdravem" class="image image--full-width image--with-border u-mb-6">
        <p class="paragraph u-mb-4">Více se Struts frameworkem zabývat nebudeme. Tato část měla za cíl vám ho jen představit. Pokud se o něm chcete dozvědět více, tak si musíte najít jiný zdroj.</p>
        <div class="u-text-center">
            <a href="../prace-s-databazi/" class="button-primary">Pokračovat na další část</a>
        </div>
    <%- include("../../includes/tutorial-page-layout-end.ejs") %>
    <%- include("../../includes/footer.ejs") %>
<%- include("../../includes/page-end.ejs") %>